package user;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import db.DBSet;

public class UserDAO {

	private Connection conn;
	private PreparedStatement pstmt;
	private PreparedStatement pstmt2;
	private ResultSet rs;

	public UserDAO() {
		conn = DBSet.getConn();
	}

	public int login(String userID, String userPW) {
		String sql = "SELECT userPW FROM USER WHERE userID = ?";
		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, userID);
			rs = pstmt.executeQuery();

			if (rs.next()) {
				if (rs.getString(1).equals(userPW))
					return 1;// 성공
				else
					return 0; // 비번틀림
			}
			return -1; // 아이디 존재x
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return -2; // db 오류
	}

	public int adlogin(String userID, String userPW) {
		String sql = "SELECT userPW, admin FROM user WHERE userID = ?";

		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, userID);

			rs = pstmt.executeQuery();

			if (rs.next()) {
				if (rs.getInt(2) == 1) {
					if (rs.getString(1).equals(userPW))
						return 1; // 성공
					else
						return 0; // 비번 틀
				}
				return -1;
				// 권환 없음
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return -2;

	}

	public int join(User user) {
		String sql = "INSERT INTO user VALUES(?,?,?,?,?)";
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);

			pstmt.setString(1, user.getUserID());
			pstmt.setString(2, user.getUserPW());
			pstmt.setString(3, user.getUserName());
			pstmt.setString(4, user.getUserPhone());
			pstmt.setInt(5, 0);

			return pstmt.executeUpdate();

		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return -1;// db오류
	}

	public ArrayList<User> getList() {
		String sql = "SELCT * FROM user";
		ArrayList<User> list = new ArrayList<User>();
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();

			while (rs.next()) {
				User user = new User();
				user.setUserID(rs.getString(1));
				user.setUserPW(rs.getString(2));
				user.setUserName(rs.getString(3));
				user.setUserPhone(rs.getString(4));
				user.setAdmin(rs.getInt(5));
				list.add(user);
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return list;
	}

	public int update(String userID, String userPW, String userName, String userPhone) {
		String sql = "UPDATE user SET userPW = ?, userName = ?, userPhone = ? WHERE userID = ?";
		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, userPW);
			pstmt.setString(2, userName);
			pstmt.setString(3, userPhone);
			pstmt.setString(4, userID);

			return pstmt.executeUpdate();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return -1;
	}


	public int delete(String userID) {
		String sql = "DELETE FROM user WHERE userID = ?";
		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, userID);

			return pstmt.executeUpdate();
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return -1;
	}

	public User getID(String userID) {
		String sql = "SELECT * FROM user WHERE userID = ?";
		try {
			PreparedStatement pstmt = conn.prepareStatement(sql);
			pstmt.setString(1, userID);
			pstmt.executeQuery();

			if (rs.next()) {
				User user = new User();
				user.setUserID(rs.getString(1));
				user.setUserPW(rs.getString(2));
				user.setUserName(rs.getString(3));
				user.setUserPhone(rs.getString(4));
				return user;
			}
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}
		return null;
	}

}
