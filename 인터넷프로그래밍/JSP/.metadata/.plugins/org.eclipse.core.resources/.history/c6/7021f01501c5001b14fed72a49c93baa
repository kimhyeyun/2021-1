package qa;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;

import db.DBSet;

public class QaDAO {
	
	private Connection conn;
	private PreparedStatement pstmt;
	private ResultSet rs;
	
	public QaDAO() {
		conn = DBSet.getConn();
	}
	
	public int Addqa(Qa qa) {
		String sql = "INSERT INTO QA (qTitle,qContents,qDate,userID) VALUES (?,?,now(),?)";
	
		try {
			pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, qa.getqTitle());
			pstmt.setString(2, qa.getqContents());
			pstmt.setString(3, qa.getUserID());
			
			return pstmt.executeUpdate();
		}catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}finally {
			DBSet.close(conn, pstmt);
		}
		return -1;
	}

	
	public int Rmqa(Qa qa) {
		String sql = "DELETE FROM QA WHERE qID = ?";
		
		try {
			pstmt = conn.prepareStatement(sql);
			
			pstmt.setInt(1, qa.getqID());
			
			return pstmt.executeUpdate();
		}catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}finally {
			DBSet.close(conn, pstmt);
		}
		
		return -1;
	}
	
	public ArrayList<Qa> findqaList(){
		String sql = "SELECT qID,qTitle,qDate,userID FROM QA";
		ArrayList<Qa> list = new ArrayList<Qa>();
		
		try {
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			
			while(rs.next()) {
				Qa qa = new Qa();
				qa.setqID(rs.getInt(1));
				qa.setqTitle(rs.getString(2));
				qa.setqContents(rs.getString(3));
				qa.setqDate(rs.getTimestamp(4));
				qa.setUserID(rs.getString(5));
				
				list.add(qa);
			}
			return list;
		}catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}finally {
			DBSet.close(conn, pstmt, rs);
		}
		return null;
	}
	
	
	public Qa findqa(int qID){
		String sql = "SELECT * FROM QA WHERE qID = ?";
		
		try {
			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, qID);
			
			rs = pstmt.executeQuery();
			
			if(rs.next()) {
				Qa qa = new Qa();
				qa.setqID(rs.getInt(1));
				qa.setqTitle(rs.getString(2));
				qa.setqContents(rs.getString(3));
				qa.setqDate(rs.getTimestamp(4));
				qa.setUserID(rs.getString(5));
				return qa;
			}
		}catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}finally {
			DBSet.close(conn, pstmt, rs);
		}
		return null;
	}
	
	public boolean isEmpty() {
		String sql = "SELECT * FROM QA";
		
		try {
			pstmt = conn.prepareStatement(sql);
			rs = pstmt.executeQuery();
			
			while(rs.next())
				return false;
		}catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
		}finally {
			DBSet.close(conn, pstmt, rs);
		}
		return true;
	}
}
